/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class LogConversationThreadRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "conversation" })
    @Type(() => components.ThreadParams)
    conversation?: components.ThreadParams;
}

export class LogConversationThreadRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: LogConversationThreadRequestBody;
}

export class Data extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;
}

/**
 * thread conversation ingested
 */
export class LogConversationThreadResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => Data)
    data?: Data;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status?: string;
}

export class LogConversationThreadResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * thread conversation ingested
     */
    @SpeakeasyMetadata()
    object?: LogConversationThreadResponseBody;
}
