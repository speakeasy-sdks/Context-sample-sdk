/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import { Message } from "./message";
import { Topic } from "./topic";
import { Expose, Type } from "class-transformer";

export enum SentimentTrend {
    Up = "up",
    Flat = "flat",
    Down = "down",
}

export class Conversation extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata({ elemType: Message })
    @Expose({ name: "messages" })
    @Type(() => Message)
    messages: Message[];

    @SpeakeasyMetadata()
    @Expose({ name: "metadata" })
    metadata: Record<string, string>;

    @SpeakeasyMetadata()
    @Expose({ name: "sentiment_trend" })
    sentimentTrend: SentimentTrend;

    @SpeakeasyMetadata({ elemType: Topic })
    @Expose({ name: "suggested_topics" })
    @Type(() => Topic)
    suggestedTopics: Topic[];

    @SpeakeasyMetadata({ elemType: Topic })
    @Expose({ name: "topics" })
    @Type(() => Topic)
    topics: Topic[];
}
