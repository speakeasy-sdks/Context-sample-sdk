/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../internal/utils";
import * as components from "../../models/components";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class SuggestedTopicConversationsRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
    id: string;
}

export class Statistics extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "assistant_message_count" })
    assistantMessageCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "conversation_count" })
    conversationCount: number;

    @SpeakeasyMetadata()
    @Expose({ name: "mean_sentiment" })
    meanSentiment: number;

    @SpeakeasyMetadata()
    @Expose({ name: "mean_user_rating" })
    meanUserRating: number;

    @SpeakeasyMetadata()
    @Expose({ name: "user_message_count" })
    userMessageCount: number;
}

/**
 * conversations
 */
export class SuggestedTopicConversationsResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "statistics" })
    @Type(() => Statistics)
    statistics: Statistics;

    @SpeakeasyMetadata()
    @Expose({ name: "topic" })
    @Type(() => components.Topic)
    topic: components.Topic;
}

export class SuggestedTopicConversationsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * conversations
     */
    @SpeakeasyMetadata()
    object?: SuggestedTopicConversationsResponseBody;
}
